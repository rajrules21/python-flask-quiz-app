version: 0.2

phases:
  install:
    runtime-versions:
      docker: 20

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version  # Optional: Check AWS CLI version
      - ECR_LOGIN_PASSWORD=$(aws ecr get-login-password --region ${AWS_DEFAULT_REGION})  # Capture output
      - echo $ECR_LOGIN_PASSWORD | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - REPOSITORY_URI=${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME} # Use retrieved environment variable
      - printf '[{"repository_uri":"%s"}]' $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - printf '[{"commit_hash":"%s"}]' $COMMIT_HASH
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - printf '[{"image_tag":"%s"}]' $IMAGE_TAG


  build:
    commands:
      - echo Build started on `date`.
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG


  post_build:
    commands:
      - echo Build completed on `date`.
      - echo Pushing the Docker images...
      - ECR_LOGIN_PASSWORD=$(aws ecr get-login-password --region ${AWS_DEFAULT_REGION})  # Capture output
      - echo $ECR_LOGIN_PASSWORD | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo '{"ImageURI": "'$REPOSITORY_URI'"}' > imagedefinitions.json.tmp  # Create temporary JSON file
      - jq . imagedefinitions.json.tmp > imagedefinitions.json  # Format JSON using jq
      - rm imagedefinitions.json.tmp  # Remove temporary file
      
artifacts:
  files:
    - imagedefinitions.json
